[ StudyProject! ]
프로젝트 이름 : newTodoList
기간 : 22.08.11~

0. 가장 먼저 종이에 내가 구현하고 싶은 서비스를 종이에 다 적어보았다.
하지만 더 자세하게 적어야 할 거 같다.

1. 폴더를 새로 만들어서, visual studio Code에서 그 폴더를 열고 시작했다.
(나는 study > "newTodoList" 를 새로 만들어놨고, 그 폴더를 열었다)

2-1. 그 터미널에서 "글로벌로 nestjs를 설치한다"
npm i -g @nestjs/cli

2-2. (거기서) 프로젝트 이름을 지정 후, 프로젝트를 만든다.
nest new [project-name]
(나는 "nest new newTodoListBackend" 라고 써줌, npm 선택)
(이렇게 프로젝트는 만들면, 자동으로 폴더가 만들어진다)

2-3. 만들어진 프로젝트 안으로 경로를 이동한 후에, CRUD 기능 만들기, 
cd ~~만들어진 프로젝트 경로!!~~
(나는 cd .\new-todo-list-backend\로 들어와서 다음 작업을 수행했다)

nest g resource [name]
(나는 nest g resource  todolist, REST API 선택 Yes~)
이게 dto, entities, controller, service 뼈대를 다 만들어준다.

src >> todolist
src 하위에 들어가 있어야 한다.

2-4. 실행
npm run start:dev 
그리고 나서 
localhost:3000 하면  Hello World!가 나오고

localhost:[name] 하면
(나는 localhost/todolist)
This action returns all todolist

A)  실행(npm run start:dev)할 때 경로가 backend쪽
>> 즉 package.json 파일이 있는 곳으로 경로가 지정되어야 한다!!
(C:\Users\MJ\study\newTodoList\new-todo-list-backend)
B) 그리고 디비(DBeaver)도 켜있어야 한다
즉 도커를 켜야 한다.
도커는 애플리케이션을 신속하게 구축, 테스트 및 배포할 수 있는 소프트웨어 플랫폼이다. 
mysql을 내 컴퓨터에 깔기 싫어서 도커를 쓰는 거다.

<Frontend>
* newTodoList 프로젝트 안에 new-todo-list-frontend 폴더를 (직접) 만든다
(일부러 backend파일명과 비슷하게 만듬)
그 안에 todoList.html, todoList.css, todoList.js 3개의  파일을 (직접) 만든다

* 원하는게 잘 나오는지 보기 위해 todo.html을 클릭해서 봐야 한다.

* 문서로 작성하고, 스크립트를 먼저 잘 작성하는 것이 매우 중요합니다!

<DB>
1. vs 터미널에 
npm install --save @nestjs/typeorm typeorm mysql2
(이걸 작성해야 Entity, Column등 자동입력됨)

2. entities >> todolist.entity.ts
필요한 @Entity(), @Column()들 작성
 @PrimaryGeneratedColumn()
 id : number
 @Column()
 content : string

3. app.module.ts
서버랑 연결되게 정보들 입력, 아래거 입력하면 위에 자동 import

@Module({
  imports: [
    TypeOrmModule.forRoot({
      type: 'mysql',
      host:'localhost',
      port:3306,
      username: 'root',
      password: '1234',
      database: 'test',
      synchronize: true,
      logging: true,
      entities: [Todolist]
    })
    ,TodolistModule],

4. todolist.service에서 Repository 만들어주기
 @InjectRepository(Todolist)
  private todoRepository : Repository<Todolist>

5. todolist.module.ts에 아래 추가 해주기
import { Todolist } from './entities/todolist.entity';
import { TypeOrmModule } from '@nestjs/typeorm';
@Module({
  imports: [TypeOrmModule.forFeature([Todolist])],

6. main.ts
app.enableCors()  써줘야 함
(보안부분, 접근을 허용한다는 의미)

<Backend>
그리고 service&controller를 먼저 만들어주면 좋을듯~?
CRUD 다 되는지 해보기

<Frontend>
이제 함수 만들어서 기능추가


* 어떻게 돌아가는지 잘 생각해보기!!
